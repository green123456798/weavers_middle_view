CREATE TABLE MEMBER ( -- 회원 테이블
	
	MID VARCHAR2(100) PRIMARY KEY, --회원 고유 ID
	MPW VARCHAR2(100) NOT NULL, -- 회원 비밀번호
	NAME VARCHAR2(100) NOT NULL, --회원 이름
	BIRTH DATE NOT NULL, -- 회원 생년월일
	PHONE VARCHAR2(100) NOT NULL, -- 회원 전화번호
	NICKNAME VARCHAR2(100) NOT NULL UNIQUE, -- 회원 닉네임
	EMAIL VARCHAR2(100), -- 회원 이메일
	MARKETING INT DEFAULT 0,	-- 회원 이메일 수신 동의 0 : 미수신
	GPK INT DEFAULT 2 NOT NULL -- 등급 고유 번호 : GRADE FK
);

INSERT INTO MEMBER (MID, MPW, NAME, BIRTH, PHONE, NICKNAME, EMAIL, MARKETING, GPK)
	VALUES ('user', '1234', '티모', '2024-01-14', '01012341234', '복숭아', 'abc@abc', 0, DEFAULT );
	
INSERT INTO MEMBER (MID, MPW, NAME, BIRTH, PHONE, NICKNAME, EMAIL, MARKETING,GPK)
	VALUES ('qwe', '1234', '가렌', 20240115, '01012341234', '파인애플', 'abc@abc', 0, DEFAULT);

	INSERT INTO MEMBER (MID, MPW, NAME, BIRTH, PHONE, NICKNAME, EMAIL, MARKETING)
	VALUES ('ewr', '1234', 'wer', 20240118, '01012341234', 'wer', 'abc@wetwe', 0);

	
SELECT MID,MPW,NAME,BIRTH,PHONE, NICKNAME, EMAIL, MARKETING,GPK
	FROM MEMBER WHERE MID='user' AND MPW='1234';

SELECT MID,MPW,NAME,BIRTH,PHONE, NICKNAME, EMAIL, MARKETING,GPK
	FROM MEMBER WHERE NICKNAME='파인애플';
	
SELECT MID,MPW,NAME,BIRTH,PHONE, NICKNAME, EMAIL, MARKETING, G.GPK, G.GRADE
	FROM MEMBER M JOIN GRADE G
	ON (M.GPK=G.GPK)
	WHERE M.MID='user' ; --회원정보 출력
	
SELECT * FROM MEMBER;

UPDATE MEMBER SET EMAIL='qwer@qwer' WHERE MID='qwe'; 

UPDATE MEMBER SET NICKNAME='샤인머스켓' WHERE MID='qwe';

UPDATE MEMBER SET PHONE='01098765432' WHERE MID='user';

UPDATE MEMBER SET MPW='0000' WHERE MID='user';

UPDATE MEMBER M SET GPK=4 WHERE M.MID='qwe';

UPDATE MEMBER 
SET EMAIL='qwer@naver.com', NICKNAME='포도', PHONE='01064542130', MPW='3333',GPK='3'
WHERE MID='user'; --한번에 변경

DROP TABLE MEMBER;

SELECT M.MID, M.MPW, M.NAME, M.BIRTH, M.PHONE, M.NICKNAME, M.EMAIL, M.MARKETING, M.GPK, G.GRADE FROM MEMBER M JOIN GRADE G ON (M.GPK = G.GPK) WHERE M.MID= 'qwer'
SELECT * FROM MEMBER M JOIN GRADE G ON (M.GPK = G.GPK) WHERE M.MID= 'qwer'
-------------------------------------------------------

CREATE TABLE GRADE ( -- 회원 등급 테이블

	GPK INT PRIMARY KEY, -- 회원 등급 고유 번호
	GRADE VARCHAR2(100) NOT NULL -- 회원 등급 
	--PK 1 : 관리자
	--PK 2 : 일반
	--PK 3 : VIP
	--PK 4 : VVIP
	--PK 5 : 탈퇴
);

INSERT INTO GRADE VALUES (1,'관리자') ;
INSERT INTO GRADE VALUES (2,'일반') ;
INSERT INTO GRADE VALUES (5,'탈퇴') ;



INSERT INTO GRADE VALUES (2,'일반') ;
INSERT INTO GRADE VALUES (2,'일반') ;

SELECT * FROM GRADE;

DROP TABLE GRADE;

----------------------------------------------------------

CREATE TABLE PRODUCT ( -- 상품 테이블
	
	PPK INT PRIMARY KEY, -- 상품 고유 번호
	PNAME VARCHAR2(100) NOT NULL, -- 상품 이름
	PRICE INT NOT NULL, -- 상품 가격
	SALES INT  DEFAULT 0 NOT NULL, -- 상품 판매량 기본값 : 0
	REGDATE DATE  DEFAULT SYSDATE NOT NULL, -- 상품 등록일
	DETAIL VARCHAR2(4000) NOT NULL, -- 상품 상세설명
	IMG VARCHAR2(4000) NOT NULL -- 상품 사진

);

SELECT * FROM PRODUCT;

SELECT PPK, PNAME, PRICE, REGDATE, IMG FROM PRODUCT;

DROP TABLE PRODUCT;

UPDATE PRODUCT SET SALES = SALES + 6 WHERE PPK = '2'

INSERT INTO PRODUCT (PPK, PNAME, PRICE, DETAIL, IMG) 
	VALUES ((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST), '디카페인아메리카노', 1400, '커피', '사진');
	
INSERT INTO PRODUCT (PPK, PNAME, PRICE, SALES, REGDATE, DETAIL, IMG) 
	VALUES ((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST), '아메리카노', 5400, 18, TO_DATE('20221011'), '커피' , '사진' );
	
INSERT INTO PRODUCT (PPK, PNAME, PRICE, SALES, REGDATE, DETAIL, IMG) 
	VALUES ((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST), '게토레이', 10000, 100, TO_DATE('20101001'), '레몬', '사진' );

SELECT PPK, PNAME, PRICE,IMG FROM PRODUCT 
	ORDER BY SALES DESC; --판매순

SELECT PPK, PNAME, PRICE,IMG, REGDATE FROM PRODUCT 
 	ORDER BY REGDATE DESC, PPK DESC; --등록일순
 	
--SELECT PPK, PNAME, PRICE, REGDATE
--	FROM PRODUCT P
--		LEFT OUTER JOIN ( SELECT PPK, COUNT(PPK) CNT FROM WISHLIST GROUP BY PPK) W
--			ON P.PPK = W.PPK
--			ORDER BY COUNT(PPK) CNT DESC,PPK DESC;	

SELECT PPK, PNAME, PRICE,IMG
	FROM PRODUCT
		ORDER BY PNAME ASC; -- 이름순
		
SELECT PPK, PNAME, PRICE,IMG FROM PRODUCT
	WHERE PNAME LIKE '%아%'; --이름으로 찾기
	
	SELECT PPK, PNAME, PRICE,IMG FROM PRODUCT
	WHERE PNAME LIKE '%'아'%'; 
	
SELECT PPK, PNAME, PRICE, DETAIL, IMG
	FROM PRODUCT WHERE PPK=1; --상품 상세 페이지 
	
SELECT P.PPK, P.PNAME, P.PRICE, P.IMG, NVL(W.CNT,0) WISHCOUNT
	FROM PRODUCT P
		LEFT OUTER JOIN (SELECT PPK, COUNT(PPK) CNT
							FROM WISHLIST
							GROUP BY PPK) W
	ON P.PPK = W.PPK
	ORDER BY P.REGDATE DESC,P.PPK DESC;
	
	SELECT P.PPK, P.PNAME, P.PRICE, P.IMG
	FROM PRODUCT P
		LEFT OUTER JOIN (SELECT PPK, COUNT(PPK) CNT
							FROM WISHLIST
							GROUP BY PPK) W
	ON P.PPK = W.PPK
	ORDER BY P.REGDATE DESC,P.PPK DESC;
	
----------------------------------------------------------			

CREATE TABLE WISHLIST( -- 상품 찜 목록 테이블
	
	WPK INT PRIMARY KEY, -- 상품 찜 고유 번호
	MID VARCHAR2(100) NOT NULL, -- 회원 ID : MEMBER FK
	PPK INT NOT NULL -- 상품 고유 번호 : PRODUCT FK
);


INSERT INTO WISHLIST
VALUES((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST),MID,PPK);

INSERT INTO WISHLIST
VALUES((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST),'user',3);

INSERT INTO WISHLIST
VALUES((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST),'qwe',3);

INSERT INTO WISHLIST
VALUES((SELECT NVL(MAX(WPK),0) +1 FROM WISHLIST),'user',4);

-- 찜 추가

INSERT INTO WISHLIST (WPK, MID, PPK)
 	VALUES (1, 'user', 1);
 	
 	INSERT INTO WISHLIST (WPK, MID, PPK)
 	VALUES (2, 'user', 2);
 	
 INSERT INTO WISHLIST (WPK, MID, PPK)
 	VALUES (3, 'qwe', 2);
 	
INSERT INTO WISHLIST (WPK, MID, PPK)
 	VALUES (4, 'qwe', 3);
 	
SELECT * FROM WISHLIST;

SELECT W.WPK, W.MID, W.PPK, P.IMG, P.PNAME
FROM WISHLIST W JOIN PRODUCT P
ON(W.PPK=P.PPK)
WHERE MID='user'; -- 찜 목록 출력
 

DELETE FROM WISHLIST
WHERE MID='user' AND PPK=1; -- 찜 취소

DROP TABLE WISHLIST;

SELECT W.WPK, W.MID, W.PPK, P.IMG, P.PNAME FROM WISHLIST W JOIN PRODUCT P ON (W.PPK=P.PPK) WHERE MID='qwer';

----------------------------------------------------------

CREATE TABLE BUYPRODUCT ( -- 구매 상품 번호 테이블
	
	BPK INT PRIMARY KEY, -- 구매 상품 고유 번호
	PPK INT NOT NULL, -- 상품 고유 번호 : PRODUCT FK
	CNT INT NOT NULL, --상품 개수
	SPK INT NOT NULL -- 주문 번호 : BUYPRODUCT FK

);

INSERT INTO BUYPRODUCT
VALUES ((SELECT NVL(MAX(BPK),0)+1 FROM BUYPRODUCT),PPK,CNT, SPK);

INSERT INTO BUYPRODUCT VALUES (1,10,3,1);

DROP TABLE BUYPRODUCT;

SELECT * FROM BUYPRODUCT;

SELECT B.CNT, S.SPK, S.REGDATE, S.DELIVERYADDRESS, P.PNAME, P.PRICE, P.IMG, P.PPK, NVL2(R.RPK, 1, 0) REVIEWCHECK FROM BUYPRODUCT B JOIN SERIAL S ON(B.SPK= S.SPK) JOIN PRODUCT P ON(B.PPK=P.PPK) LEFT JOIN REVIEW R ON (B.BPK = R.BPK) WHERE S.MID='user' ORDER BY B.SPK DESC

SELECT B.CNT, S.SPK, S.REGDATE, P.PNAME, P.PRICE, P.IMG, P.PPK FROM BUYPRODUCT B JOIN SERIAL S ON B.SPK=S.SPK JOIN PRODUCT P ON B.PPK=P.PPK WHERE B.BPK = '2'
----------------------------------------------------------

CREATE TABLE SERIAL ( -- 구매 상품 테이블

	SPK INT PRIMARY KEY, -- 구매 고유 번호 (시리얼넘버)
	MID VARCHAR2(100) NOT NULL, -- 회원 ID : MEMBER FK
	REGDATE DATE DEFAULT SYSDATE NOT NULL,  -- 회원이 구매한 날짜 
	DELIVERYADDRESS VARCHAR2(4000) NOT NULL --회원 배송지
);

INSERT INTO SERIAL
VALUES ((SELECT NVL(MAX(SPK),0)+1 FROM SERIAL),'qwe',DEFAULT,'가나다라');

SELECT * FROM SERIAL;

DROP TABLE SERIAL;


--------------------------------------------------------

CREATE TABLE CART ( -- 장바구니 테이블
	
	CPK INT PRIMARY KEY, -- 장바구니 고유 번호
	MID VARCHAR2(100) NOT NULL, -- 회원 ID : MEMBER FK
	PPK INT NOT NULL, -- 상품 고유 번호 : PRODUCT FK
 	CNT INT NOT NULL -- 회원이 구매한 개수

);

SELECT * FROM CART;

INSERT INTO CART
VALUES((SELECT NVL(MAX(CPK),0)+1 FROM CART),'qwer',1,10);

INSERT INTO CART
VALUES((SELECT NVL(MAX(CPK),0)+1 FROM CART),'qwer',2,5);

INSERT INTO CART
VALUES((SELECT NVL(MAX(CPK),0)+1 FROM CART),'user',3,50);

INSERT INTO CART
VALUES((SELECT NVL(MAX(CPK),0)+1 FROM CART),PPK,MID,CNT);--장바구니 추가

SELECT C.CPK, C.MID, C.PPK, C.CNT, P.PNAME, P.PRICE, P.IMG 
FROM CART C JOIN PRODUCT P --PRODUCT 와 JOIN 해서 NAME,PRICE,IMG 을 가져온다.
ON (C.PPK=P.PPK)
WHERE C.MID = 'user'; --각자 아이디별로 장바구니가 다르기때문에 아이디로 구분한다.


UPDATE CART SET CNT=20 WHERE MID='user' AND PPK=1 ; -- 상품 번호별로 개수를 바꿔야하기때문에 상품 PK를 가져오고 ID별로 구분한다.
​
UPDATE CART SET CNT=CNT+1 WHERE MID='user' AND PPK=2; -- 장바구니 상품 한개씩 증가

UPDATE CART SET CNT=CNT-1 WHERE MID='user' AND PPK=2; 

DELETE FROM CART WHERE MID='user' AND PPK=1; --장바구니 삭제

DELETE FROM CART WHERE MID='user'; --개인 장바구니 전체 삭제

SELECT C.CPK, C.MID, C.PPK, C.CNT, P.PNAME, P.PRICE, P.IMG FROM CART C JOIN PRODUCT P ON (C.PPK=P.PPK) WHERE C.MID='qwer';
----------------------------------------------------------

CREATE TABLE ADDRESS ( -- 배송지 테이블
 
	APK INT PRIMARY KEY, -- 배송지 고유 번호
	MID VARCHAR2(100) NOT NULL, -- 회원 ID : MEMBER FK
	ZONECODE VARCHAR2(10) NOT NULL, -- 우편 번호 
	JIBUNADDRESS VARCHAR2(4000) , -- 지번 주소
	ROADADDRESS VARCHAR2(4000) NOT NULL, -- 도로명 주소
	DETAIL VARCHAR2(4000), -- 상세 주소 : 없을 수도 있어서 NOT NULL 사용 안함.
	ANAME VARCHAR2(100) NOT NULL
);



INSERT INTO ADDRESS
VALUES ((SELECT NVL(MAX(APK),0)+1 FROM ADDRESS),MID, ZONECODE, JIBUNADDRESS, ROADADDRESS, DETAIL, ADDRESSNAME);

INSERT INTO ADDRESS
VALUES ((SELECT NVL(MAX(APK),0)+1 FROM ADDRESS),'qwe', '02030', '서울 지번 ', '서울 도로명', '13층', '집');
-- 주소 추가

SELECT * FROM ADDRESS;

SELECT APK, ZONECODE, JIBUNADDRESS, DETAIL
FROM ADDRESS WHERE MID = 'qwe'; --결제할때 보여줄 주소들
----------------------------------------------------------

CREATE TABLE REVIEW ( -- 리뷰 테이블

	RPK INT PRIMARY KEY, -- 리뷰 고유 번호
	MID VARCHAR2(100) NOT NULL, -- 회원 ID : MEMBER FK
	BPK INT NOT NULL,
	CONTENT VARCHAR2(4000) , -- 리뷰 내용
	SCOPE INT  DEFAULT 0 NOT NULL, -- 별점
	IMG VARCHAR2(4000), -- 리뷰 사진
	REGDATE DATE DEFAULT SYSDATE NOT NULL -- 리뷰 작성 일자
);

INSERT INTO REVIEW
VALUES ((SELECT NVL(MAX(RPK),0)+1 FROM REVIEW),MID,BPK,CONTENT,SCOPE,IMG,REGDATE);
-- 리뷰 추가


INSERT INTO REVIEW
VALUES ((SELECT NVL(MAX(RPK),0)+1 FROM REVIEW),'qwe',1,'좋아요',DEFAULT,'쿠리만쥬사진',SYSDATE);

INSERT INTO REVIEW (RPK,MID,PPK,CONTENT,SCOPE,REGDATE)
VALUES ((SELECT NVL(MAX(RPK),0)+1 FROM REVIEW),'user',2,'최고',4,SYSDATE);

INSERT INTO REVIEW (RPK, MID, PPK, SCOPE, REGDATE)
VALUES ((SELECT NVL(MAX(RPK),0)+1 FROM REVIEW),'user',3, DEFAULT, DEFAULT);


SELECT R.CONTENT, R.SCOPE, R.IMG, R.REGDATE, M.NICKNAME, M.GPK
FROM REVIEW R JOIN MEMBER M
ON(R.MID = M.MID)
WHERE R.PPK=3;
--상세페이지에 나오는 리뷰들 출력

SELECT P.PNAME, R.CONTENT, R.SCOPE, R.IMG, R.REGDATE
FROM REVIEW R JOIN PRODUCT P
ON (R.PPK=P.PPK)
WHERE R.MID='user';
--개인 구매 상품 리뷰 작성 목록

SELECT P.PNAME, R.CONTENT, R.SCOPE, R.IMG
FROM REVIEW R JOIN PRODUCT P
ON (R.PPK=P.PPK)
WHERE R.MID='qwe';

UPDATE REVIEW SET CONTENT='안녕하세요' WHERE MID='qwe' AND PPK=2;
--리뷰 내용 수정
SELECT * FROM REVIEW;

DROP TABLE REVIEW;

SELECT P.PNAME, R.CONTENT, R.SCOPE, R.IMG, R.REGDATE FROM REVIEW R JOIN BUYPRODUCT B ON (R.BPK = B.BPK) JOIN PRODUCT P ON (B.PPK = P.PPK) WHERE R.MID='user'

SELECT P.PPK, P.PNAME, P.IMG PIMG, R.RPK, R.CONTENT, R.SCOPE, R.IMG, R.REGDATE FROM REVIEW R JOIN BUYPRODUCT B ON (R.BPK = B.BPK) JOIN PRODUCT P ON (B.PPK = P.PPK) WHERE R.MID='user'










